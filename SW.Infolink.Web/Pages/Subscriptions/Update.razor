@page "/subscriptions/{Id:int}"

<UpdateForm Title="Subscription" TModel="SubscriptionUpdate" ApiUrl="subscriptions" ReturnUrl="subscriptions" Id="Id" StayAfterSave="true">
    <Tabs>
        <Tab Title="General">
            <Field Name="@nameof(SubscriptionUpdate.Name)" />

            <Field Name="@nameof(SubscriptionUpdate.DocumentId)"
                   Lookup="@Lookup.FromSearchy("documents")"
                   Text="Document"
                   ReadOnly="true" />

            <Field Name="@nameof(SubscriptionUpdate.PartnerId)"
                   Lookup="@Lookup.FromSearchy("partners")"
                   Text="Partner"
                   ReadOnly="true" />

            <Field Name="@nameof(SubscriptionUpdate.Inactive)" />
        </Tab>

        @if (context.Type == SubscriptionType.Receiving)
        {
            <Tab Title="Receiver">
                <Field Name="@nameof(SubscriptionUpdate.ReceiverId)" Lookup="@Lookup.From("adapters?prefix=receivers")" />
                @if (context.ReceiverId != null)
                {
                    <Subform Name="@nameof(SubscriptionUpdate.ReceiverProperties)">
                        <Columns>
                            <Field Text="Action">
                                <ColumnHeader Context="fieldContext">
                                    Action (<a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("add", null))">add</a>)
                                </ColumnHeader>
                                <ColumnValue Context="fieldContext">
                                    <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("remove", fieldContext.Model))">Remove</a>
                                    <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("edit", fieldContext.Model))">Edit</a>
                                </ColumnValue>
                            </Field>
                            <Field Name="@nameof(KeyAndValue.Key)" />
                            <Field Name="@nameof(KeyAndValue.Value)" />
                        </Columns>


                        <Form>
                            <Field Name="@nameof(KeyAndValue.Key)" Lookup="@Lookup.FromSearchy($"adapters/{context.ReceiverId}/properties")" />
                            <Field Name="@nameof(KeyAndValue.Value)" />
                        </Form>
                    </Subform>
                }

                <Subform Name="@nameof(SubscriptionUpdate.ReceiveSchedules)">
                    <Columns>
                        <Field Text="Action">
                            <ColumnHeader Context="fieldContext">
                                Action (<a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("add", null))">add</a>)
                            </ColumnHeader>
                            <ColumnValue Context="fieldContext">
                                <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("remove", fieldContext.Model))">Remove</a>
                                <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("edit", fieldContext.Model))">Edit</a>
                            </ColumnValue>
                        </Field>
                        <Field Name="@nameof(ScheduleView.Recurrence)" />
                        <Field Name="@nameof(ScheduleView.Backwards)" />
                    </Columns>
                    <Form>
                        <ScheduleForm />
                    </Form>
                </Subform>
                <Field Name="@nameof(SubscriptionUpdate.ReceiveOn)" ReadOnly="true" />
                <Field Name="@nameof(SubscriptionUpdate.ReceiveConsecutiveFailures)" ReadOnly="true" />
                <Field Name="@nameof(SubscriptionUpdate.ReceiveLastException)" ReadOnly="true" InputType="InputType.Multiline" />
            </Tab>
        }

        @if (context.Type == SubscriptionType.Aggregation)
        {
            <Tab Title="Aggregation">
                <Field Name="@nameof(SubscriptionUpdate.AggregationForId)" Lookup="@Lookup.FromSearchy("seubscriptions")" />

                <Subform Name="@nameof(SubscriptionUpdate.Schedules)">
                    <Columns>
                        <Field Text="Action">
                            <ColumnHeader Context="fieldContext">
                                Action (<a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("add", null))">add</a>)
                            </ColumnHeader>
                            <ColumnValue Context="fieldContext">
                                <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("remove", fieldContext.Model))">Remove</a>
                                <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("edit", fieldContext.Model))">Edit</a>
                            </ColumnValue>
                        </Field>
                        <Field Name="@nameof(ScheduleView.Recurrence)" />
                        <Field Name="@nameof(ScheduleView.Backwards)" />
                    </Columns>
                    <Form>
                        <ScheduleForm />
                    </Form>
                </Subform>
            </Tab>
        }

        @if (context.Type == SubscriptionType.FilterResult)
        {
            <Tab Title="Filter">
                <Subform Name="@nameof(SubscriptionUpdate.DocumentFilter)">
                    <Columns>
                        <Field Text="Action">
                            <ColumnHeader Context="fieldContext">
                                Action (<a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("add", null))">add</a>)
                            </ColumnHeader>
                            <ColumnValue Context="fieldContext">
                                <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("remove", fieldContext.Model))">Remove</a>
                                <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("edit", fieldContext.Model))">Edit</a>
                            </ColumnValue>
                        </Field>
                        <Field Name="@nameof(KeyAndValue.Key)" />
                        <Field Name="@nameof(KeyAndValue.Value)" />
                    </Columns>
                    <Form>
                        <Field Name="@nameof(KeyAndValue.Key)" Lookup="@Lookup.FromSearchy($"documents/{context.DocumentId}/properties")" />
                        <Field Name="@nameof(KeyAndValue.Value)" />
                    </Form>
                </Subform>
            </Tab>
        }

        <Tab Title="Mapper">

            <Field Name="@nameof(SubscriptionUpdate.MapperId)"
                   Lookup="@Lookup.From("adapters?prefix=mappers")"
                   Text="Mapper" />

            @if (context.MapperId != null)
            {
                <Subform Name="@nameof(SubscriptionUpdate.MapperProperties)">
                    <Columns>
                        <Field Text="Action">
                            <ColumnHeader Context="fieldContext">
                                Action (<a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("add", null))">add</a>)
                            </ColumnHeader>
                            <ColumnValue Context="fieldContext">
                                <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("remove", fieldContext.Model))">Remove</a>
                                <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("edit", fieldContext.Model))">Edit</a>
                            </ColumnValue>
                        </Field>
                        <Field Name="@nameof(KeyAndValue.Key)" />
                        <Field Name="@nameof(KeyAndValue.Value)" />
                    </Columns>
                    <Form>
                        <Field Name="@nameof(KeyAndValue.Key)" Lookup="@Lookup.FromSearchy($"adapters/{context.MapperId}/properties")" />
                        <Field Name="@nameof(KeyAndValue.Value)" />
                    </Form>
                </Subform>
            }
        </Tab>

        <Tab Title="Handler">

            <Field Name="@nameof(SubscriptionUpdate.HandlerId)" 
                   Lookup="@Lookup.From("adapters?prefix=handlers")" 
                   Text="Handler" />

            @if (context.HandlerId != null)
            {
                <Subform Name="@nameof(SubscriptionUpdate.HandlerProperties)">
                    <Columns>
                        <Field Text="Action">
                            <ColumnHeader Context="fieldContext">
                                Action (<a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("add", null))">add</a>)
                            </ColumnHeader>
                            <ColumnValue Context="fieldContext">
                                <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("remove", fieldContext.Model))">Remove</a>
                                <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("edit", fieldContext.Model))">Edit</a>
                            </ColumnValue>
                        </Field>
                        <Field Name="@nameof(KeyAndValue.Key)" />
                        <Field Name="@nameof(KeyAndValue.Value)" />
                    </Columns>
                    <Form>
                        <Field Name="@nameof(KeyAndValue.Key)" Lookup="@Lookup.FromSearchy($"adapters/{context.HandlerId}/properties")" />
                        <Field Name="@nameof(KeyAndValue.Value)" />
                    </Form>
                </Subform>
                <Field Name="@nameof(SubscriptionUpdate.ResponseSubscriptionId)" Lookup="@Lookup.FromSearchy("subscriptions")" />
            }
        </Tab>

    </Tabs>
</UpdateForm>

@code {

    KeyValuePair<string, string> kvp = new KeyValuePair<string, string>();

    [Parameter]
    public int Id { get; set; }

}
