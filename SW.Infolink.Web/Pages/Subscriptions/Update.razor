@page "/subscriptions/{Id:int}"

<UpdateForm Title="Subscription" TModel="SubscriptionConfig" ApiUrl="subscriptions" ReturnUrl="subscriptions" Id="Id">
    <Tabs Height="400px">
        <Tab Title="General">
            <Field Name="@nameof(SubscriptionConfig.Name)" />
            <Field Name="@nameof(SubscriptionConfig.DocumentId)" Lookup="documents" ReadOnly="true" />
            <Field Name="@nameof(SubscriptionConfig.Inactive)" />
            <Field Name="@nameof(SubscriptionConfig.Aggregate)" />
        </Tab>

        @if (context.Type == SubscriptionType.Receiving)
        {
    <Tab Title="Receiver">
        <Field Name="@nameof(SubscriptionConfig.ReceiverId)" Lookup="adapters" />
        <Subform Name="@nameof(SubscriptionConfig.ReceiverProperties)">
            <Columns>
                <Field Text="Action">
                    <ColumnHeader Context="fieldContext">
                        Action (<a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("add", null))">add</a>)
                    </ColumnHeader>
                    <ColumnValue Context="fieldContext">
                        <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("remove", fieldContext.Model))">Remove</a>
                        <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("edit", fieldContext.Model))">Edit</a>
                    </ColumnValue>
                </Field>
                <Field Name="@nameof(KeyAndValue.Key)" />
                <Field Name="@nameof(KeyAndValue.Value)" />
            </Columns>
            <Form>
                <Field Name="@nameof(KeyAndValue.Key)" Lookup="@($"adapters/{context.MapperId}/properties")" />
                <Field Name="@nameof(KeyAndValue.Value)" />
            </Form>
        </Subform>

        <Subform Name="@nameof(SubscriptionConfig.ReceiveSchedules)">
            <Columns>
                <Field Text="Action">
                    <ColumnHeader Context="fieldContext">
                        Action (<a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("add", null))">add</a>)
                    </ColumnHeader>
                    <ColumnValue Context="fieldContext">
                        <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("remove", fieldContext.Model))">Remove</a>
                        <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("edit", fieldContext.Model))">Edit</a>
                    </ColumnValue>
                </Field>
                <Field Name="@nameof(ScheduleView.Recurrence)" />
                <Field Name="@nameof(ScheduleView.Backwards)" />
            </Columns>
            <Form>
                <Field Name="@nameof(ScheduleView.Recurrence)" />
                <ScheduleTime />                
                <Field Name="@nameof(ScheduleView.Backwards)" />
            </Form>
        </Subform>
    </Tab>
        }

        @if (context.Type == SubscriptionType.FilterResult)
        {
            <Tab Title="Schedules">
                <Subform Name="@nameof(SubscriptionConfig.Schedules)">
                    <Columns>
                        <Field Text="Action">
                            <ColumnHeader Context="fieldContext">
                                Action (<a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("add", null))">add</a>)
                            </ColumnHeader>
                            <ColumnValue Context="fieldContext">
                                <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("remove", fieldContext.Model))">Remove</a>
                                <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("edit", fieldContext.Model))">Edit</a>
                            </ColumnValue>
                        </Field>
                        <Field Name="@nameof(ScheduleView.Recurrence)" />
                        <Field Name="@nameof(ScheduleView.Backwards)" />
                    </Columns>
                    <Form>
                        <Field Name="@nameof(ScheduleView.Recurrence)" />
                        <ScheduleTime />
                        <Field Name="@nameof(ScheduleView.Backwards)" />
                    </Form>
                </Subform>
            </Tab>

            <Tab Title="Filter">
                <Subform Name="@nameof(SubscriptionConfig.DocumentFilter)">
                    <Columns>
                        <Field Text="Action">
                            <ColumnHeader Context="fieldContext">
                                Action (<a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("add", null))">add</a>)
                            </ColumnHeader>
                            <ColumnValue Context="fieldContext">
                                <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("remove", fieldContext.Model))">Remove</a>
                                <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("edit", fieldContext.Model))">Edit</a>
                            </ColumnValue>
                        </Field>
                        <Field Name="@nameof(KeyAndValue.Key)" />
                        <Field Name="@nameof(KeyAndValue.Value)" />
                    </Columns>
                    <Form>
                        <Field Name="@nameof(KeyAndValue.Key)" Lookup="@($"documents/{context.DocumentId}/properties")" />
                        <Field Name="@nameof(KeyAndValue.Value)" />
                    </Form>
                </Subform>

            </Tab>
        }
        <Tab Title="Mapper">
            <Field Name="@nameof(SubscriptionConfig.MapperId)" Lookup="adapters" />
            <Subform Name="@nameof(SubscriptionConfig.MapperProperties)">
                <Columns>
                    <Field Text="Action">
                        <ColumnHeader Context="fieldContext">
                            Action (<a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("add", null))">add</a>)
                        </ColumnHeader>
                        <ColumnValue Context="fieldContext">
                            <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("remove", fieldContext.Model))">Remove</a>
                            <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("edit", fieldContext.Model))">Edit</a>
                        </ColumnValue>
                    </Field>
                    <Field Name="@nameof(KeyAndValue.Key)" />
                    <Field Name="@nameof(KeyAndValue.Value)" />
                </Columns>
                <Form>
                    <Field Name="@nameof(KeyAndValue.Key)" Lookup="@($"adapters/{context.MapperId}/properties")" />
                    <Field Name="@nameof(KeyAndValue.Value)" />
                </Form>
            </Subform>
        </Tab>
        <Tab Title="Handler">
            <Field Name="@nameof(SubscriptionConfig.HandlerId)" Lookup="adapters" />
            <Field Name="@nameof(SubscriptionConfig.HandlerProperties)" />
        </Tab>


    </Tabs>
</UpdateForm>

@code {

    KeyValuePair<string, string> kvp = new KeyValuePair<string, string>();



    [Parameter]
    public int Id { get; set; }

}
