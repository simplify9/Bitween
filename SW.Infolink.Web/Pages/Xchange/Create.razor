@page "/xchanges/create"
@inject NavigationManager navigationManager
@inject InfolinkClient infolinkClient
@inject NotifyService notifyService


<h3>Submit Exchange</h3>

<div class="row">
    <div class="col-xl-7 mt-2">

        <SimplyForm @bind-Value="model">
            @* <Field Name="@nameof(SubmitXchange.Option)" /> *@
            <Field Name="@nameof(SubmitXchange.DocumentId)" Lookup="@Lookup.FromSearchy("documents")" />
            @* @if (model.Option == XchangeRequestOption.SubscriberId) *@
            @* { *@
            @*     <Field Name="@nameof(SubmitXchange.SubscriberId)" Lookup="@Lookup.FromSearchy("subscribers")" /> *@
            @* } *@
            @* else *@
            @* { *@
            @*     <Field Name="@nameof(SubmitXchange.DocumentId)" Lookup="@Lookup.FromSearchy("documents")" /> *@
            @* } *@

            <Field Name="@nameof(SubmitXchange.Data)" InputType="InputType.Multiline" rows="" />
        </SimplyForm>
    </div>
</div>
<div class="row">
    <div class="col-xl-7 mt-4 mb-2">
        <BusyButton OnClick="OnSubmit" class="btn btn-primary">
            <Title>
                Submit
            </Title>
        </BusyButton>
        <a class="btn btn-secondary" href="">Cancel</a>
    </div>
</div>

@code {

    SubmitXchange model = new SubmitXchange();

    async Task OnSubmit(IBusyButton busyButton)
    {
        var apiResult = await infolinkClient.Update($"xchanges/{model.DocumentId}", model.Data);
        await notifyService.NotifyOnApiResult(apiResult);
        if (apiResult.Success)
            navigationManager.NavigateTo("/");

        await busyButton.SetBusy(false);
    }

}
