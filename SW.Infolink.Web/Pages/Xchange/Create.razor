@page "/xchanges/create"
@inject NavigationManager navigationManager
@inject InfolinkClient infolinkClient
@inject NotifyService notifyService


<h3>Submit Exchange</h3>

<div class="row">
    <div class="col-xl-7 mt-2">

        <SimplyForm @bind-Value="model">
            <Field Name="@nameof(CreateXchange.Option)" />
           
            @if (model.Option == CreateXchangeOption.SubscriberId)
            {
                <Field Name="@nameof(CreateXchange.SubscriberId)" Lookup="@Lookup.FromSearchy("subscriptions")" />
            }
            else
            {
                <Field Name="@nameof(CreateXchange.DocumentId)" Lookup="@Lookup.FromSearchy("documents")" />
            }

            <Field Name="@nameof(CreateXchange.Data)" InputType="InputType.Multiline" rows="" />
        </SimplyForm>
    </div>
</div>
<div class="row">
    <div class="col-xl-7 mt-4 mb-2">
        <BusyButton OnClick="OnSubmit" class="btn btn-primary">
            <Title>
                Submit
            </Title>
        </BusyButton>
        <a class="btn btn-secondary" href="">Cancel</a>
    </div>
</div>

@code {

    CreateXchange model = new CreateXchange();

    async Task OnSubmit(IBusyButton busyButton)
    {
        var apiResult = await infolinkClient.Update($"xchanges", model);
        await notifyService.NotifyOnApiResult(apiResult);
        if (apiResult.Success)
            navigationManager.NavigateTo("/");

        await busyButton.SetBusy(false);
    }

}
