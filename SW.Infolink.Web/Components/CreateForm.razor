@typeparam TModel
@inject NavigationManager navigationManager
@inject InfolinkClient infolinkClient
@inject NotifyService notifyService

<h3>New @Title</h3>
<div class="row">
    <div class="col-xl-7 mt-4 mb-2">
        <BusyButton class="btn btn-primary" OnClick="OnSave">
            <Title>
                Save
            </Title>
        </BusyButton>
        <a class="btn btn-secondary" href="@ReturnUrl">Cancel</a>
    </div>
</div>
<div class="row">
    <div class="col-xl-7 mt-2">
        <SimplyForm @bind-Value="model">
            @ChildContent
        </SimplyForm>
    </div>
</div>
@code {

    TModel model = Activator.CreateInstance<TModel>();

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string ApiUrl { get; set; }

    [Parameter]
    public string ReturnUrl { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    async Task OnSave(IBusyButton busyButton)
    {
        var apiResult = await infolinkClient.Create(ApiUrl, model);
        await notifyService.NotifyOnApiResult(apiResult);
        if (apiResult.Success)
            navigationManager.NavigateTo($"{ReturnUrl}/{apiResult.Response}");

        await busyButton.SetBusy(false);
    }

}
