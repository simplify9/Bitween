name: $(version)

trigger:
- releases/*

pool:
  vmImage: 'ubuntu-latest'

variables:
- name: imageName
  value: 'infolink'
- name: version
  value: $[format('6.0.{0}', counter('6.0', 0))]

jobs:

- job: build
  displayName: Build, push image and chart and deploy to playground
  condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/releases/')
  steps:

#  - task: VersionDotNetCoreAssemblies@2
#    inputs:
#      Path: '$(Build.SourcesDirectory)'
#      VersionNumber: '$(Build.BuildNumber)'
#      Injectversion: False
#      VersionRegex: '\d+\.\d+\.\d+'
#      FilenamePattern: '.csproj'
#      SDKNames: 'Microsoft.NET.Sdk'
#      OutputVersion: 'OutputedVersion'

  - task: Docker@2
    displayName: Build and push an image to container registry
    inputs:
      command: buildAndPush
      repository: $(imageName)
      dockerfile: $(Build.SourcesDirectory)/Dockerfile
      containerRegistry: infoaxsstgcr
      tags: |
        $(version)
        latest

  - task: HelmInstaller@0
    displayName: 'Install Helm 3.2.4'
    inputs:
      helmVersion: '3.2.4'
      checkLatestHelmVersion: false
      installKubectl: false

  - task: HelmDeploy@0
    displayName: Helm package
    inputs:
      command: package
      chartPath: charts/default
      arguments: --version $(version) --app-version $(version)
      updatedependency: true


  - task: HelmDeploy@0
    displayName: 'Deploy to playground'
    inputs:
      connectionType: 'Kubernetes Service Connection'
      kubernetesServiceConnection: 'k8s-stg'
      namespace: 'playground'
      command: 'upgrade'
      chartName: $(Build.ArtifactStagingDirectory)/$(imageName)-$(version).tgz
      chartVersion: $(version)
      releaseName: '$(imageName)'
      arguments: >
        --set ingress.hosts={infolink-stg.aramex.com}
        --set db="$(stgDbConnection)"
        --set global.environment="staging"
        --set ingress.annotations."kubernetes\.io/ingress\.class"="nginx"
        --set ingress.path="/"
        --set global.bus.rabbitUrl="$(stgRabbitUrl)"
        --set global.cloudFiles.bucketName="infolink"
        --set global.cloudFiles.accessKeyId="azrinfolinkdevfile"
        --set global.cloudFiles.serviceUrl="https://azrinfolinkdevfile.blob.core.windows.net/"
        --set global.cloudFiles.secretAccessKey="6l+4mknpA44jBNjWsUoA9P6jhXd7MkDqnffbtPkuPJ4g07bN6n3LybLSpAKh/02thV5M9/bLUr1x+AStSEB8Uw=="
        --set storageProvider="AS" 
        --set areXChangeFilesPrivate=true

  